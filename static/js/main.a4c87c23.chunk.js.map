{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactsForm/ContactsForm.module.css","components/ContactsForm/ContactsForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactsForm","state","name","number","nameInputId","shortid","generate","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","data","id","props","onSubmit","reset","this","className","s","contactsForm","htmlFor","formLabel","type","onChange","Component","ContactList","contacts","onDeleteContact","map","contactItem","onClick","Filter","App","filter","changeFilter","getVisibleContacts","normalFilter","toLowerCase","contact","includes","formSubmitHandler","some","el","alert","prevState","deleteContact","contactId","persistedData","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4c87c23.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactList_contactItem__1fFRC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsForm\":\"ContactsForm_contactsForm__1dqkd\",\"formLabel\":\"ContactsForm_formLabel__cOfUB\"};","import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactsForm.module.css\";\r\n\r\nclass ContactsForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n\r\n    const data = {\r\n      id: shortid.generate(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    this.props.onSubmit(data);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={s.contactsForm}>\r\n        <label htmlFor={shortid.generate()} className={s.formLabel}>\r\n          Name\r\n        </label>\r\n        <input\r\n          className={s.formLabel}\r\n          id={shortid.generate()}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n        />\r\n        <label htmlFor={shortid.generate()} className={s.formLabel}>\r\n          Number\r\n        </label>\r\n        <input\r\n          className={s.formLabel}\r\n          id={shortid.generate()}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={this.state.number}\r\n          onChange={this.handleChange}\r\n        />\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactsForm;\r\n","import React from \"react\";\r\nimport PropTypes, { object } from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <>\r\n      <ul>\r\n        {contacts.map(({ name, id, number }) => (\r\n          <li key={id} className={s.contactItem}>\r\n            <p>\r\n              <span>{name}:</span> {number}\r\n            </p>\r\n            <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <>\r\n    <p>Find contacts by name</p>\r\n    <label htmlFor=\"\">\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n  </>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import \"./App.css\";\nimport ContactsForm from \"./components/ContactsForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n\nimport React, { Component } from \"react\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n  componentDidMount() {\n    const persistedData = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (persistedData) {\n      this.setState(() => ({ contacts: [...persistedData] }));\n      return;\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    const normalFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalFilter)\n    );\n  };\n\n  formSubmitHandler = (data) => {\n    const { contacts } = this.state;\n    if (\n      contacts.some((el) => el.name.toLowerCase() === data.name.toLowerCase())\n    ) {\n      return alert(`${data.name} is already in contacts`);\n    }\n\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, data],\n    }));\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const filteredContacts = this.getVisibleContacts();\n\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactsForm onSubmit={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}